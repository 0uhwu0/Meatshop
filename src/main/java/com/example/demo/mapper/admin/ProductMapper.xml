<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.admin.ProductMapper">
	<resultMap type="com.example.demo.domain.ProductView"
		id="productViewMap">
		<id column="product_id" property="productId" />
		<result column="product_name" property="productName" />
		<result column="country_of_origin" property="countryOfOrigin" />
		<result column="price" property="price" />
		<result column="stock_quantity" property="stockQuantity" />
		<result column="category_id" property="categoryId" />
		<result column="category_name" property="categoryName" />
		<result column="description" property="description" />
		<collection property="fileName" ofType="string">
			<result column="file_name" />
		</collection>
	</resultMap>

	<!-- 상품 목록 -->
	<select id="getAllView" resultMap="productViewMap">
		SELECT * FROM productview
		ORDER BY product_id DESC
	</select>

	<!-- 상품 상세 -->
	<select id="getViewById" resultMap="productViewMap">
		SELECT * FROM productview
		WHERE product_id = #{productId}
	</select>

	<!-- 상품 삭제 -->
	<delete id="deleteById">
		DELETE FROM products WHERE product_id = #{productId}
	</delete>

	<!-- 상품 추가 -->
	<insert id="create" useGeneratedKeys="true"
		keyProperty="productId">
		INSERT
		INTO products
		(product_name, country_of_origin,
		category_id, price, stock_quantity)
		VALUES
		(#{productName},
		#{countryOfOrigin}, #{categoryId}, #{price},
		#{stockQuantity})
	</insert>

	<!-- 파일관련 -->
	<insert id="insertFileName">
		INSERT INTO productfilename (product_id, file_name)
		VALUES (#{productId}, #{originalFilename})
	</insert>

	<!-- <resultMap type="java.util.ArrayList" id="fileNameMap"> <collection 
		property="fileName" ofType="String"> <result column="file_name" /> </collection> 
		</resultMap> 상품id로 파일 검색 -->
	<!-- <select id="selectFileNamesByProductId" resultType="ArrayList"> SELECT 
		file_name FROM productfilename WHERE product_id = #{productId} </select> -->

	<!-- 상품id로 파일 삭제 -->
	<delete id="deleteFileNameByProductId">
		DELETE FROM productfilename
		WHERE product_id = #{productId}
	</delete>

	<!-- 특정상품의 특정사진 삭제 -->
	<delete id="deleteFileNameByBoardIdAndFileName">
		DELETE FROM productfilename
		WHERE product_id = #{productId}
		AND file_Name = #{fileName}
	</delete>

	<!-- 상품 수정 -->
	<update id="update">
		UPDATE products SET
		product_name = #{productName},
		country_of_origin = #{countryOfOrigin},
		category_id = #{categoryId},
		price = #{price},
		stock_quantity = #{stockQuantity}
		WHERE product_id = #{productId}
	</update>
</mapper>

